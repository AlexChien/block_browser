%table.details
  - cache("block/#{@block.hash}/details_1") do
    %tr
      %th Block
      %th= @block.hash
    %tr
      %th Depth
      %td= @block.depth
    %tr
      %th Prev Block
      - @prev_block = @block.get_prev_block
      - if @prev_block
        %td= link_to(@prev_block.hash, block_path(@prev_block.hash))
      - else
        %td= @block.prev_block.unpack("H*")[0]
  %tr
    %th Next Block
    - @next_block = @block.get_next_block
    - if @next_block
      %td= link_to(@next_block.hash, block_path(@next_block.hash))
    - else
      %td not seen
  - cache("block/#{@block.hash}/details_2") do
    %tr
      %th Merkle Root
      %td= @block.mrkl_root.unpack("H*")[0]
    %tr
      %th Time
      %td= format_time @block.time
    %tr
      %th Transactions
      %td= @block.tx.size
    %tr
      %th Size
      %td= number_to_human_size @block.to_payload.bytesize
    %tr
      %th Total Value
      %td= format_amount(@block.tx.map(&:out).flatten.map(&:value).sum)
    %tr
      %th Formats
      %td
        = link_to "[json]", "/block/#{@block.hash}.json"
        = link_to "[binary]", "/block/#{@block.hash}.bin"

- cache("block/#{@block.hash}/tx") do
  %h3 Transactions
  %table.list
    %tr
      %th Hash
      %th Inputs
      %th Outputs
      %th Size
      %th Value
    = render :partial => 'tx', :collection => @block.tx