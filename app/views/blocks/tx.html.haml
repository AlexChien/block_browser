%table.details
  %tr
    %th Transaction
    %th= @tx.hash
  %tr
    %th Block
    %td
      - if block = @tx.get_block
        = link_to(block.hash, block_path(block.hash))
      - else
        unconfirmed
  %tr
    %th Confirmations
    %td
      - if @tx.get_block
        = STORE.get_depth - @tx.get_block.depth
        (At Depth: #{@tx.get_block.depth})
      - else
        unconfirmed
  %tr
    %th Size
    %td= @tx.to_payload.bytesize
  %tr
    %th Inputs
    %td= @tx.in.size
  %tr
    %th Outputs
    %td= @tx.out.size
  - if @tx.in.size == 1 && @tx.in[0].coinbase?
    - input_value = 50*1e8 # TODO
  - else
    - input_value = @tx.in.map(&:get_prev_out).map(&:value).sum rescue '?'
  %tr
    %th Input Value
    %td= format_amount(input_value) rescue '?'
  - output_value = @tx.out.map(&:value).sum
  %tr
    %th Output Value
    %td= format_amount(output_value)
  %tr
    %th Fee
    %td= format_amount(input_value - output_value) rescue '?'
  %tr
    %th Formats
    %td
      = link_to "[json]", "/tx/#{@tx.hash}.json"
      = link_to "[binary]", "/tx/#{@tx.hash}.bin"

%h3 Inputs
%table.list
  %tr
    %th IDX
    %th Previous Output
    %th Value
    %th From Address
    %th Script
    %th Debug


  - @tx.in.each_with_index do |txin, idx|
    %tr{:class => cycle('odd', 'even')}
      %td= idx
      - if txin.coinbase?
        %td generation
        %td 50
        %td -
        %td= txin.script_sig.unpack("H*")[0]
      - else
        - if prev_out = txin.get_prev_out
          %td
            = link_to(truncate(prev_out.get_tx.hash, :length => 16), tx_path(prev_out.get_tx.hash))
            = "/ #{txin.prev_out_index}"
          %td= format_amount(prev_out.value) rescue "?"
          %td
            = link_to(prev_out.get_address, address_path(prev_out.get_address))
          %td
            %pre
              = Bitcoin::Script.new(txin.script_sig).to_string.split(" ").join("\n")
          %td= link_to "Run Script", script_path("#{@tx.hash}:#{idx}")
        - else
          %td{:colspan => 5} not seen

%h3 Outputs
%table.list
  %tr
    %th IDX
    %th Next Input
    %th Value
    %th To Address
    %th Script
    %th Debug
  - @tx.out.each_with_index do |txout, idx|
    - script = Bitcoin::Script.new(txout.pk_script) rescue nil
    %tr{:class => cycle('odd', 'even')}
      %td= idx
      %td
        - if next_input = txout.get_next_in
          - tx_hash = next_input.get_tx.hash
          = link_to(truncate(tx_hash, :length => 16, :omission => '...'), tx_path(tx_hash))
        - else
          not seen

      %td= format_amount(txout.value)
      %td= link_to(script.get_address, address_path(script.get_address)) rescue "?"
      %td
        %pre= script.to_string rescue "?"
      %td
        - if next_input
          = link_to "Run Script", script_path("#{next_input.get_tx.hash}:#{next_input.tx_idx}")
