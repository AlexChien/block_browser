%table.details
  %tr
    %th Address
    %th= @address 
  %tr
    %th Transactions
    %td= @txouts.size
  %tr
    %th Total Volume
    %td= format_amount(@txouts.map(&:value).sum)
  %tr
    %th Current Balance
    %th= format_amount(STORE.get_balance(@address))

%h3 Transactions

%table.list
  %tr
    %th Tx
    %th Address
    %th Kind
    %th Value
    %th Total

  - total = 0
  - @txouts.each do |txout|
    - total += txout.value
    %tr{:class => cycle('odd', 'even')}
      %td= transaction_link(txout.get_tx)
      %td
        - txout.get_tx.in.each do |txin|
          - if txin.coinbase?
            generation
          - else
            - prev_out = txin.get_prev_out
            = address_link(prev_out.get_address)
            (#{format_amount(txout.value)})
            %br/
      %td.incoming= "->"
      %td.value= format_amount(txout.value)
      %td.value= format_amount(total)

    - if txin = txout.get_next_in
      - total -= txout.value
      %tr{:class => cycle('odd', 'even')}
        %td= transaction_link(txin.get_tx)
        %td
          - txin.get_tx.out.each do |out|
            = address_link(out.get_address)
            (#{format_amount(out.value)})
            %br/
        %td.outgoing= "<-"
        %td.value.outgoing= "- #{format_amount(txout.value)}"
        %td.value= format_amount(total)

